!function(){var e={searchbar:null,searchable:null,hiddenClass:"searchable-row-hidden",initializeSearchbar:function(){if(this.searchbar=document.querySelector(".searchbar"),this.searchable=document.querySelector(".searchable"),this.searchbar&&this.searchable&&this.parseSearchable())for(var e=this.getSearchbarElements(),t=0;t<e.length;++t)this.processSearchbarElement(e[t])},parseSearchable:function(){var e=this.getSearchableRows();if(0===e.length)return!1;for(var t=0;t<e.length;++t)for(var r=e[t].childNodes,a=0;a<r.length;++a)this.processCell(r[a],e[t]);return!0},getSearchableRows:function(){return"TABLE"===this.searchable.tagName?this.searchable.querySelectorAll("tbody tr"):this.searchable.querySelectorAll(".searchable-row")},processCell:function(e,t){if(""!==this.getElementType(e)){var r="data-"+e.getAttribute("headers"),a=e.getAttribute("data-searchbar-value");t.setAttribute(r,a)}},getElementType:function(e){for(var t=e.className,r=["search","filter","toggle"],a=0;a<r.length;++a)if(-1!==t.indexOf(r[a]))return r[a];return""},getSearchbarElements:function(){return this.searchbar.querySelectorAll("input, select, button")},processSearchbarElement:function(e){var t="",r=0;switch(e.type){case"text":t="keyup",r=150;break;case"select-one":t="change";break;case"checkbox":case"reset":t="click"}if(t.length>0){var a="reset"!==e.type?this.debounce(this.search,r).bind(this):this.reset.bind(this);e.addEventListener(t,a)}},search:function(){var e=new Event("searchbar:beforeSearch");if(this.searchbar.dispatchEvent(e)){this.resetSearchable();for(var t=this.getSearchableRows(),r=0;r<t.length;++r){for(var a=t[r],s=!0,c=this.getSearchbarElements(),n=0;n<c.length;n++)if(s){var h=c[n],i=this.getValue(h),l=this.getAttr(h);if(l&&i&&"all"!==i){var u="text"!==h.type?this.nonTextSearch(a,l,i):this.textSearch(a,l,i);s=s&&u}}s||a.classList.add(this.hiddenClass)}this.searchbar.dispatchEvent(new Event("searchbar:afterSearch"))}},getValue:function(e){switch(e.type){case"text":return e.value;case"select-one":return e.options[e.selectedIndex].value;case"checkbox":return e.checked}return""},getAttr:function(e){var t=e.getAttribute("id");return t?"data-"+(t=t.replace(/_.*/,"")):""},nonTextSearch:function(e,t,r){return e.hasAttribute(t+"-list")?e.matches("["+t+"~="+r+"]"):e.getAttribute(t)===r},textSearch:function(e,t,r){try{var a=new RegExp(r,"i");return e.getAttribute(t).match(a)}catch(e){}},reset:function(){var e=new Event("searchbar:reset");return!this.searchbar.dispatchEvent(e)||(this.searchbar.reset(),this.resetSearchable()),!1},resetSearchable:function(){for(var e=this.getSearchableRows(),t=0;t<e.length;++t)e[t].classList.remove(this.hiddenClass)},debounce:function(e,t,r){if(0===t)return e;var a;return function(){var s=this,c=arguments,n=function(){a=null,r||e.apply(s,c)},h=r&&!a;clearTimeout(a),a=setTimeout(n,t),h&&e.apply(s,c)}}};document.addEventListener("DOMContentLoaded",function(){e.initializeSearchbar()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
