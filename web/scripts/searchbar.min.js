!function(){var e=!1,t=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/;this.Class=function(){},Class.extend=function(r,a){function s(){!e&&this.init&&this.init.apply(this,arguments)}void 0==a&&(a=r,r="Class");var n=this.prototype;e=!0;var c=new this;e=!1;for(var i in a)c[i]="function"==typeof a[i]&&"function"==typeof n[i]&&t.test(a[i])?function(e,t){return function(){var r=this._super;this._super=n[e];var a=t.apply(this,arguments);return this._super=r,a}}(i,a[i]):a[i];s.prototype=c;var h=new Function("return function "+r+"(){ }")();return s.prototype.constructor=h,s.extend=arguments.callee,s},module.exports=Class}();var Searchbar=Class.extend({searchbar:null,searchable:null,hiddenClass:"searchable-row-hidden",init:function(){if(this.searchbar=document.querySelector(".searchbar"),this.searchable=document.querySelector(".searchable"),this.searchbar&&this.searchable&&this.parseSearchable())for(var e=this.getSearchbarElements(),t=0;t<e.length;++t)this.processSearchbarElement(e[t])},parseSearchable:function(){var e=this.getSearchableRows();if(0===e.length)return!1;for(var t=0;t<e.length;++t)for(var r=e[t].querySelectorAll("[data-searchbar-value]"),a=0;a<r.length;++a)this.processCell(r[a],e[t]);return!0},getSearchableRows:function(){var e=this.searchable.querySelectorAll(".searchable-row");return 0===e.length&&"TABLE"===this.searchable.tagName&&(e=this.searchable.querySelectorAll("tbody tr")),e},processCell:function(e,t){var r="data-"+e.getAttribute("headers"),a=e.getAttribute("data-searchbar-value");t.setAttribute(r,a),"1"===e.getAttribute("data-searchbar-value-list")&&t.setAttribute(r+"-list",1)},getSearchbarElements:function(){return this.searchbar.querySelectorAll("input, select, button")},processSearchbarElement:function(e){var t="",r=0;switch(e.type){case"text":t="keyup",r=150;break;case"select-one":t="change";break;case"checkbox":case"reset":t="click"}if(t.length>0){var a="reset"!==e.type?this.debounce(this.search,r).bind(this):this.reset.bind(this);e.addEventListener(t,a)}},search:function(){var e=new Event("searchbar:beforeSearch");if(this.searchbar.dispatchEvent(e)){this.resetSearchable();for(var t=this.getSearchableRows(),r=0;r<t.length;++r){for(var a=t[r],s=!0,n=this.getSearchbarElements(),c=0;c<n.length;c++)if(s){var i=n[c],h=this.getValue(i),l=this.getAttr(i);if(l&&h&&"all"!==h){var u="text"!==i.type?this.nonTextSearch(a,l,h):this.textSearch(a,l,h);s=s&&u}}s||a.classList.add(this.hiddenClass)}this.searchbar.dispatchEvent(new Event("searchbar:afterSearch"))}},getValue:function(e){switch(e.type){case"text":return e.value;case"select-one":return e.options[e.selectedIndex].value;case"checkbox":return e.checked?"1":null}return""},getAttr:function(e){var t=e.getAttribute("id");return t?"data-"+(t=t.replace(/_.*/,"")):""},nonTextSearch:function(e,t,r){return e.hasAttribute(t+"-list")?e.matches("["+t+"*=_"+r+"_]"):e.getAttribute(t)===r},textSearch:function(e,t,r){try{var a=new RegExp(r,"i");return e.getAttribute(t).match(a)}catch(e){return!1}},reset:function(){var e=new Event("searchbar:reset");return!this.searchbar.dispatchEvent(e)||(this.searchbar.reset(),this.resetSearchable()),!1},resetSearchable:function(){for(var e=this.getSearchableRows(),t=0;t<e.length;++t)e[t].classList.remove(this.hiddenClass)},debounce:function(e,t,r){if(0===t)return e;var a;return function(){var s=this,n=arguments,c=function(){a=null,r||e.apply(s,n)},i=r&&!a;clearTimeout(a),a=setTimeout(c,t),i&&e.apply(s,n)}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXNzLmpzIiwic2VhcmNoYmFyLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemluZyIsImZuVGVzdCIsInRlc3QiLCJ4eXoiLCJ0aGlzIiwiQ2xhc3MiLCJleHRlbmQiLCJjbGFzc05hbWUiLCJwcm9wIiwiaW5pdCIsImFwcGx5IiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwiX3N1cGVyIiwicHJvdG90eXBlIiwibmFtZSIsImZuIiwidG1wIiwicmV0IiwiZnVuYyIsIkZ1bmN0aW9uIiwiY29uc3RydWN0b3IiLCJjYWxsZWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiU2VhcmNoYmFyIiwic2VhcmNoYmFyIiwic2VhcmNoYWJsZSIsImhpZGRlbkNsYXNzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicGFyc2VTZWFyY2hhYmxlIiwiZWxlbWVudHMiLCJnZXRTZWFyY2hiYXJFbGVtZW50cyIsImkiLCJsZW5ndGgiLCJwcm9jZXNzU2VhcmNoYmFyRWxlbWVudCIsInJvd3MiLCJnZXRTZWFyY2hhYmxlUm93cyIsImNlbGxzIiwicXVlcnlTZWxlY3RvckFsbCIsImoiLCJwcm9jZXNzQ2VsbCIsInRhZ05hbWUiLCJjZWxsIiwicm93IiwiYXR0ciIsImdldEF0dHJpYnV0ZSIsInZhbHVlIiwic2V0QXR0cmlidXRlIiwiZWxlbWVudCIsImV2ZW50Iiwid2FpdCIsInR5cGUiLCJkZWJvdW5jZSIsInNlYXJjaCIsImJpbmQiLCJyZXNldCIsImFkZEV2ZW50TGlzdGVuZXIiLCJiZWZvcmVTZWFyY2giLCJFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJyZXNldFNlYXJjaGFibGUiLCJzaG93IiwiZ2V0VmFsdWUiLCJnZXRBdHRyIiwiY3JpdGVyaW9uIiwibm9uVGV4dFNlYXJjaCIsInRleHRTZWFyY2giLCJjbGFzc0xpc3QiLCJhZGQiLCJvcHRpb25zIiwic2VsZWN0ZWRJbmRleCIsImNoZWNrZWQiLCJpZCIsInJlcGxhY2UiLCJoYXNBdHRyaWJ1dGUiLCJtYXRjaGVzIiwicGF0dGVybiIsIlJlZ0V4cCIsIm1hdGNoIiwiZSIsImJlZm9yZVJlc2V0IiwicmVtb3ZlIiwiaW1tZWRpYXRlIiwidGltZW91dCIsImNvbnRleHQiLCJhcmdzIiwibGF0ZXIiLCJjYWxsTm93IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxHQUFBQSxJQUFBLEVBQUFDLEVBQUEsTUFBQUMsS0FBQSxXQUFBQyxNQUFBLGFBQUEsSUFHQUMsTUFBQUMsTUFBQSxhQUdBQSxNQUFBQyxPQUFBLFNBQUFDLEVBQUFDLEdBdUNBLFFBQUFILE1BRUFMLEdBQUFJLEtBQUFLLE1BQ0FMLEtBQUFLLEtBQUFDLE1BQUFOLEtBQUFPLGVBekNBQyxJQUFBSixJQUNBQSxFQUFBRCxFQUNBQSxFQUFBLFFBR0EsSUFBQU0sR0FBQVQsS0FBQVUsU0FJQWQsSUFBQSxDQUNBLElBQUFjLEdBQUEsR0FBQVYsS0FDQUosSUFBQSxDQUdBLEtBQUEsR0FBQWUsS0FBQVAsR0FFQU0sRUFBQUMsR0FBQSxrQkFBQVAsR0FBQU8sSUFDQSxrQkFBQUYsR0FBQUUsSUFBQWQsRUFBQUMsS0FBQU0sRUFBQU8sSUFDQSxTQUFBQSxFQUFBQyxHQUNBLE1BQUEsWUFDQSxHQUFBQyxHQUFBYixLQUFBUyxNQUlBVCxNQUFBUyxPQUFBQSxFQUFBRSxFQUlBLElBQUFHLEdBQUFGLEVBQUFOLE1BQUFOLEtBQUFPLFVBR0EsT0FGQVAsTUFBQVMsT0FBQUksRUFFQUMsSUFFQUgsRUFBQVAsRUFBQU8sSUFDQVAsRUFBQU8sRUFXQVYsR0FBQVMsVUFBQUEsQ0FHQSxJQUFBSyxHQUFBLEdBQUFDLFVBQ0EsbUJBQUFiLEVBQUEsVUFPQSxPQUxBRixHQUFBUyxVQUFBTyxZQUFBRixFQUdBZCxFQUFBQyxPQUFBSyxVQUFBVyxPQUVBakIsR0FJQWtCLE9BQUFDLFFBQUFuQixRQS9EQSxJQUFBb0IsV0FBQXBCLE1BQUFDLFFBQ0FvQixVQUFBLEtBQ0FDLFdBQUEsS0FDQUMsWUFBQSx3QkFFQW5CLEtBQUEsV0FRQSxHQVBB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bnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4gIHZhciBpbml0aWFsaXppbmcgPSBmYWxzZSwgZm5UZXN0ID0gL3h5ei8udGVzdChmdW5jdGlvbigpe3h5ejt9KSA/IC9cXGJfc3VwZXJcXGIvIDogLy4qLztcblxuICAvLyBUaGUgYmFzZSBDbGFzcyBpbXBsZW1lbnRhdGlvbiAoZG9lcyBub3RoaW5nKVxuICB0aGlzLkNsYXNzID0gZnVuY3Rpb24oKXt9O1xuXG4gIC8vIENyZWF0ZSBhIG5ldyBDbGFzcyB0aGF0IGluaGVyaXRzIGZyb20gdGhpcyBjbGFzc1xuICBDbGFzcy5leHRlbmQgPSBmdW5jdGlvbihjbGFzc05hbWUsIHByb3ApIHtcbiAgICBpZihwcm9wID09IHVuZGVmaW5lZCkge1xuICAgICAgICBwcm9wID0gY2xhc3NOYW1lO1xuICAgICAgIGNsYXNzTmFtZSA9IFwiQ2xhc3NcIjtcbiAgICB9XG5cbiAgICB2YXIgX3N1cGVyID0gdGhpcy5wcm90b3R5cGU7XG5cbiAgICAvLyBJbnN0YW50aWF0ZSBhIGJhc2UgY2xhc3MgKGJ1dCBvbmx5IGNyZWF0ZSB0aGUgaW5zdGFuY2UsXG4gICAgLy8gZG9uJ3QgcnVuIHRoZSBpbml0IGNvbnN0cnVjdG9yKVxuICAgIGluaXRpYWxpemluZyA9IHRydWU7XG4gICAgdmFyIHByb3RvdHlwZSA9IG5ldyB0aGlzKCk7XG4gICAgaW5pdGlhbGl6aW5nID0gZmFsc2U7XG5cbiAgICAvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG92ZXIgb250byB0aGUgbmV3IHByb3RvdHlwZVxuICAgIGZvciAodmFyIG5hbWUgaW4gcHJvcCkge1xuICAgICAgLy8gQ2hlY2sgaWYgd2UncmUgb3ZlcndyaXRpbmcgYW4gZXhpc3RpbmcgZnVuY3Rpb25cbiAgICAgIHByb3RvdHlwZVtuYW1lXSA9IHR5cGVvZiBwcm9wW25hbWVdID09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgX3N1cGVyW25hbWVdID09IFwiZnVuY3Rpb25cIiAmJiBmblRlc3QudGVzdChwcm9wW25hbWVdKSA/XG4gICAgICAgIChmdW5jdGlvbihuYW1lLCBmbil7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRtcCA9IHRoaXMuX3N1cGVyO1xuXG4gICAgICAgICAgICAvLyBBZGQgYSBuZXcgLl9zdXBlcigpIG1ldGhvZCB0aGF0IGlzIHRoZSBzYW1lIG1ldGhvZFxuICAgICAgICAgICAgLy8gYnV0IG9uIHRoZSBzdXBlci1jbGFzc1xuICAgICAgICAgICAgdGhpcy5fc3VwZXIgPSBfc3VwZXJbbmFtZV07XG5cbiAgICAgICAgICAgIC8vIFRoZSBtZXRob2Qgb25seSBuZWVkIHRvIGJlIGJvdW5kIHRlbXBvcmFyaWx5LCBzbyB3ZVxuICAgICAgICAgICAgLy8gcmVtb3ZlIGl0IHdoZW4gd2UncmUgZG9uZSBleGVjdXRpbmdcbiAgICAgICAgICAgIHZhciByZXQgPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgdGhpcy5fc3VwZXIgPSB0bXA7XG5cbiAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSkobmFtZSwgcHJvcFtuYW1lXSkgOlxuICAgICAgICBwcm9wW25hbWVdO1xuICAgIH1cblxuICAgIC8vIFRoZSBkdW1teSBjbGFzcyBjb25zdHJ1Y3RvclxuICAgIGZ1bmN0aW9uIENsYXNzKCkge1xuICAgICAgLy8gQWxsIGNvbnN0cnVjdGlvbiBpcyBhY3R1YWxseSBkb25lIGluIHRoZSBpbml0IG1ldGhvZFxuICAgICAgaWYgKCAhaW5pdGlhbGl6aW5nICYmIHRoaXMuaW5pdCApXG4gICAgICAgIHRoaXMuaW5pdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIC8vIFBvcHVsYXRlIG91ciBjb25zdHJ1Y3RlZCBwcm90b3R5cGUgb2JqZWN0XG4gICAgQ2xhc3MucHJvdG90eXBlID0gcHJvdG90eXBlO1xuXG4gICAgLy8gRW5mb3JjZSB0aGUgY29uc3RydWN0b3IgdG8gYmUgd2hhdCB3ZSBleHBlY3RcbiAgICB2YXIgZnVuYyA9IG5ldyBGdW5jdGlvbihcbiAgICAgICAgXCJyZXR1cm4gZnVuY3Rpb24gXCIgKyBjbGFzc05hbWUgKyBcIigpeyB9XCJcbiAgICApKCk7XG4gICAgQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gZnVuYztcblxuICAgIC8vIEFuZCBtYWtlIHRoaXMgY2xhc3MgZXh0ZW5kYWJsZVxuICAgIENsYXNzLmV4dGVuZCA9IGFyZ3VtZW50cy5jYWxsZWU7XG5cbiAgICByZXR1cm4gQ2xhc3M7XG4gIH07XG5cbiAgLy9JIG9ubHkgYWRkZWQgdGhpcyBsaW5lXG4gIG1vZHVsZS5leHBvcnRzID0gQ2xhc3M7XG59KSgpO1xuIiwiXHJcbi8vIHRoZSBjbGFzcy5leHRlbmQgbnBtIG1vZHVsZSBtdXN0IGJlIGluY2x1ZGVkIHByaW9yIHRvIHRoaXNcclxuLy8gaWYgeW91IHVzZSB0aGUgaW5jbHVkZWQgbWluaW1pemVkIGZpbGUsIHdlJ3ZlIGJ1bmRsZWQgdGhhdFxyXG4vLyBtb2R1bGUgdG9nZXRoZXIgd2l0aCB0aGlzIG9iamVjdCBmb3IgeW91LlxyXG5cclxudmFyIFNlYXJjaGJhciA9IENsYXNzLmV4dGVuZCh7XHJcblx0c2VhcmNoYmFyOiBudWxsLFxyXG5cdHNlYXJjaGFibGU6IG51bGwsXHJcblx0aGlkZGVuQ2xhc3M6IFwic2VhcmNoYWJsZS1yb3ctaGlkZGVuXCIsXHJcblxyXG5cdGluaXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5zZWFyY2hiYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlYXJjaGJhclwiKTtcclxuXHRcdHRoaXMuc2VhcmNoYWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VhcmNoYWJsZVwiKTtcclxuXHJcblx0XHQvLyB0byBoYXZlIGEgc2VhcmNoYmFyLCB3ZSBuZWVkIGJvdGggdGhlIHNlYXJjaGJhciBlbGVtZW50IGFuZFxyXG5cdFx0Ly8gdGhlIHNlYXJjaGFibGUgZGF0YSBzZXQuICB3aXRob3V0IHRob3NlLCB3ZSBjYW4gc2ltcGx5IHF1aXRcclxuXHRcdC8vIGJlY2F1c2UsIGNsZWFybHksIHRoaXMgcGFnZSBkb2Vzbid0IG5lZWQgdGhpcyBmdW5jdGlvbmFsaXR5LlxyXG5cclxuXHRcdGlmICghdGhpcy5zZWFyY2hiYXIgfHwgIXRoaXMuc2VhcmNoYWJsZSkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gbm93IHRoYXQgd2Uga25vdyB3ZSBoYXZlIHRob3NlLCB3ZSBjYW4gcGFyc2UgdGhlIHNlYXJjaGFibGVcclxuXHRcdC8vIGRhdGEgc2V0IHRvIHByZXBhcmUgaXQgZm9yIHVzZS4gIGl0J3MgcG9zc2libGUgdGhhdCB0aGlzIG1ldGhvZFxyXG5cdFx0Ly8gcmV0dXJucyBmYWxzZSB3aGVuIHRoZXJlIGFyZSBubyByb3dzIHdpdGhpbiB0aGUgc2V0IHRvIHdvcmtcclxuXHRcdC8vIHdpdGguXHJcblxyXG5cdFx0aWYgKCF0aGlzLnBhcnNlU2VhcmNoYWJsZSgpKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBmaW5hbGx5LCBvdXIgc2VhcmNoYWJsZSBkYXRhIHNldCBpcyByZWFkeSB0byBnby4gIG5vdywgd2UgY2FuXHJcblx0XHQvLyBob29rIHVwIGV2ZW50cyB0byBvdXIgc2VhcmNoYmFyLlxyXG5cclxuXHRcdHZhciBlbGVtZW50cyA9IHRoaXMuZ2V0U2VhcmNoYmFyRWxlbWVudHMoKTtcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyArK2kpIHtcclxuXHRcdFx0dGhpcy5wcm9jZXNzU2VhcmNoYmFyRWxlbWVudChlbGVtZW50c1tpXSk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cGFyc2VTZWFyY2hhYmxlOiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciByb3dzID0gdGhpcy5nZXRTZWFyY2hhYmxlUm93cygpO1xyXG5cclxuXHRcdC8vIGlmIHdlIGRvbid0IGhhdmUgcm93cywgdGhlbiB3ZSBjYW4gcXVpdC5cclxuXHJcblx0XHRpZiAocm93cy5sZW5ndGggPT09IDApIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIG90aGVyd2lzZSwgZm9yIHRoZSBjaGlsZHJlbiBvZiBvdXIgcm93cyAtLSB3aGljaCBhcmUgbGlrZWx5XHJcblx0XHQvLyB0YWJsZSBjZWxscywgYnV0IGNvdWxkIGJlIHNvbWV0aGluZyBlbHNlIC0tIHdlIHdhbnQgdG8gcHJvY2Vzc1xyXG5cdFx0Ly8gdGhlbSBpbmRpdmlkdWFsbHkgd2l0aCB0aGUgbWV0aG9kIGJlbG93LlxyXG5cclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcm93cy5sZW5ndGg7ICsraSkge1xyXG5cdFx0XHR2YXIgY2VsbHMgPSByb3dzW2ldLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1zZWFyY2hiYXItdmFsdWVdXCIpO1xyXG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGNlbGxzLmxlbmd0aDsgKytqKSB7XHJcblx0XHRcdFx0dGhpcy5wcm9jZXNzQ2VsbChjZWxsc1tqXSwgcm93c1tpXSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9LFxyXG5cclxuXHRnZXRTZWFyY2hhYmxlUm93czogZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0Ly8gZm9yIG1heGltdW0gZmxleGliaWxpdHksIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgYSBkZXZlbG9wZXJcclxuXHRcdC8vIHVzaW5nIG91ciBzZWFyY2hiYXIgY2FuIHNwZWNpZnkgd2hhdCBzaG91bGQgYmUgY29uc2lkZXJlZCBhXHJcblx0XHQvLyBzZWFyY2hhYmxlIHJvdy4gIGJ1dCwgaWYgdGhleSBkb24ndCBhbmQgaWYgdGhlIHNlYXJjaGFibGUgRE9NXHJcblx0XHQvLyBlbGVtZW50IGlzIGEgdGFibGUsIHRoZW4gd2UnbGwganVzdCB1c2UgdGhlIHJvd3MgaW4gaXRzIHRhYmxlXHJcblx0XHQvLyBib2R5IGJ5IGRlZmF1bHQuXHJcblxyXG5cdFx0dmFyIHJvd3MgPSB0aGlzLnNlYXJjaGFibGUucXVlcnlTZWxlY3RvckFsbChcIi5zZWFyY2hhYmxlLXJvd1wiKTtcclxuXHRcdGlmIChyb3dzLmxlbmd0aCA9PT0gMCAmJiB0aGlzLnNlYXJjaGFibGUudGFnTmFtZSA9PT0gXCJUQUJMRVwiKSB7XHJcblx0XHRcdHJvd3MgPSB0aGlzLnNlYXJjaGFibGUucXVlcnlTZWxlY3RvckFsbChcInRib2R5IHRyXCIpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiByb3dzO1xyXG5cdH0sXHJcblxyXG5cdHByb2Nlc3NDZWxsOiBmdW5jdGlvbihjZWxsLCByb3cpIHtcclxuXHJcblx0XHQvLyB0byBwcm9jZXNzIGEgY2VsbCwgd2Ugd2FudCB0byBhZGQgSFRNTDUgZGF0YSBhdHRyaWJ1dGVzIHRoYXRcclxuXHRcdC8vIGNvcnJlc3BvbmQgdG8gaW5mb3JtYXRpb24gZXh0cmFjdGVkIGZyb20gdGhlIGNlbGwgaXRzZWxmIHRvXHJcblx0XHQvLyB0aGUgc3BlY2lmaWVkIHJvdy4gIHRoaXMgaXMgYmVjYXVzZSBvdXIgc2VhcmNoIG1ldGhvZCBsb29rc1xyXG5cdFx0Ly8gYXQgdGhlIHJvd3Mgd2hlbiBtYXRjaGluZyBlbnRyaWVzIGFnYWluc3QgZGF0YS5cclxuXHJcblx0XHR2YXIgYXR0ciA9IFwiZGF0YS1cIiArIGNlbGwuZ2V0QXR0cmlidXRlKFwiaGVhZGVyc1wiKTtcclxuXHRcdHZhciB2YWx1ZSA9IGNlbGwuZ2V0QXR0cmlidXRlKFwiZGF0YS1zZWFyY2hiYXItdmFsdWVcIik7XHJcblx0XHRyb3cuc2V0QXR0cmlidXRlKGF0dHIsIHZhbHVlKTtcclxuXHJcblx0XHRpZiAoY2VsbC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNlYXJjaGJhci12YWx1ZS1saXN0XCIpID09PSBcIjFcIikge1xyXG5cdFx0XHRyb3cuc2V0QXR0cmlidXRlKGF0dHIgKyBcIi1saXN0XCIsIDEpO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdGdldFNlYXJjaGJhckVsZW1lbnRzOiBmdW5jdGlvbigpIHtcclxuXHJcblx0XHQvLyBvdXIgc2VhcmNoYmFyIHVzZXMgdGhlc2UgSFRNTCBlbGVtZW50cyBhdCB0aGUgbW9tZW50LiAgaWYgd2VcclxuXHRcdC8vIGFkIG1vcmUsIHdlJ2xsIG5lZWQgdG8gdXBkYXRlIHRoaXMgbGlzdC5cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5zZWFyY2hiYXIucXVlcnlTZWxlY3RvckFsbChcImlucHV0LCBzZWxlY3QsIGJ1dHRvblwiKTtcclxuXHR9LFxyXG5cclxuXHRwcm9jZXNzU2VhcmNoYmFyRWxlbWVudDogZnVuY3Rpb24oZWxlbWVudCkge1xyXG5cdFx0dmFyIGV2ZW50ID0gXCJcIiwgd2FpdCA9IDA7XHJcblxyXG5cdFx0Ly8gdGhlIGV2ZW50IHdlIHdhbnQgdG8gdXNlIGlzIGJhc2VkIG9uIHRoZSB0eXBlIG9mIGVsZW1lbnQgdGhhdFxyXG5cdFx0Ly8gd2UncmUgd29ya2luZyB3aXRoLiAgbW9zdCBvZiBvdXIgZXZlbnRzIGRvbid0IG5lZWQgdG8gYmVcclxuXHRcdC8vIGRlYm91bmNlZCwgYnV0IGlmIHdlIHJ1biBpbnRvIG9uZSB0aGF0IGRvZXMsIHdlIGNhbiBzZXQgb3VyXHJcblx0XHQvLyB3YWl0IHZhcmlhYmxlIHRvIHNvbWV0aGluZyBvdGhlciB0aGFuIHplcm8uXHJcblxyXG5cdFx0c3dpdGNoIChlbGVtZW50LnR5cGUpIHtcclxuXHRcdFx0Y2FzZSBcInRleHRcIjpcclxuXHRcdFx0XHRldmVudCA9IFwia2V5dXBcIjtcclxuXHRcdFx0XHR3YWl0ID0gMTUwO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSBcInNlbGVjdC1vbmVcIjpcclxuXHRcdFx0XHRldmVudCA9IFwiY2hhbmdlXCI7XHJcblx0XHRcdFx0YnJlYWs7XHJcblxyXG5cdFx0XHRjYXNlIFwiY2hlY2tib3hcIjpcclxuXHRcdFx0XHRldmVudCA9IFwiY2xpY2tcIjtcclxuXHRcdFx0XHRicmVhaztcclxuXHJcblx0XHRcdGNhc2UgXCJyZXNldFwiOlxyXG5cdFx0XHRcdGV2ZW50ID0gXCJjbGlja1wiO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmIChldmVudC5sZW5ndGggPiAwKSB7XHJcblxyXG5cdFx0XHQvLyBpZiB3ZSBpZGVudGlmaWVkIGFuIGV2ZW50IHRvIGxpc3RlbiBmb3IsIHdlJ2xsIG5vdyBpZGVudGlmeVxyXG5cdFx0XHQvLyB3aGljaCBmdW5jdGlvbiB0byBjYWxsLiAgaWYgd2UncmUgbm90IG1lc3Npbmcgd2l0aCB0aGUgcmVzZXRcclxuXHRcdFx0Ly8gZWxlbWVudCwgd2Ugc2VhcmNoOyBvdGhlcndpc2Ugd2UgcmVzZXQuXHJcblxyXG5cdFx0XHR2YXIgZnVuYyA9IGVsZW1lbnQudHlwZSAhPT0gXCJyZXNldFwiXHJcblx0XHRcdFx0PyB0aGlzLmRlYm91bmNlKHRoaXMuc2VhcmNoLCB3YWl0KS5iaW5kKHRoaXMpXHJcblx0XHRcdFx0OiB0aGlzLnJlc2V0LmJpbmQodGhpcyk7XHJcblxyXG5cdFx0XHRlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGZ1bmMpO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHNlYXJjaDogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgYmVmb3JlU2VhcmNoID0gbmV3IEV2ZW50KFwic2VhcmNoYmFyOmJlZm9yZVNlYXJjaFwiKTtcclxuXHRcdHZhciBjYW5jZWxsZWQgPSAhdGhpcy5zZWFyY2hiYXIuZGlzcGF0Y2hFdmVudChiZWZvcmVTZWFyY2gpO1xyXG5cdFx0aWYgKGNhbmNlbGxlZCkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gYXNzdW1pbmcgc29tZXRoaW5nIGVsc2UgZGlkbid0IGNhbmNlbCBvdXIgc2VhcmNoLCB0aGUgZmlyc3RcclxuXHRcdC8vIHRoaW5nIHdlIGRvIGlzIHJlc2V0IG91ciB0YWJsZS4gIHRoYXQgd2F5LCB3ZSBrbm93IHRoYXQgd2VcclxuXHRcdC8vIHN0YXJ0IHdpdGggdGhlIGVudGlyZSB0aGluZyB2aXNpYmxlIGFuZCB3ZSdsbCBmaW5kIHRoZSBvbmVzXHJcblx0XHQvLyB0aGF0IG5lZWQgdG8gYmUgaGlkZGVuIGJlbG93LlxyXG5cclxuXHRcdHRoaXMucmVzZXRTZWFyY2hhYmxlKCk7XHJcblx0XHR2YXIgcm93cyA9IHRoaXMuZ2V0U2VhcmNoYWJsZVJvd3MoKTtcclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcm93cy5sZW5ndGg7ICsraSkge1xyXG5cdFx0XHR2YXIgcm93ID0gcm93c1tpXSwgc2hvdyA9IHRydWU7XHJcblxyXG5cdFx0XHQvLyBmb3IgZWFjaCByb3csIHdlIG5lZWQgdG8gY29tcGFyZSB0aGUgaW5mb3JtYXRpb24gaW4gdGhlXHJcblx0XHRcdC8vIEhUTUw1IGRhdGEgYXR0cmlidXRlcyBhZGRlZCBieSB0aGUgcGFyc2VTZWFyY2hhYmxlKCkgbWV0aG9kXHJcblx0XHRcdC8vIGFib3ZlIGFnYWluc3QgdGhlIHZhbHVlcyBpbiBvdXIgc2VhcmNoYmFyIGVsZW1lbnRzLlxyXG5cclxuXHRcdFx0dmFyIGVsZW1lbnRzID0gdGhpcy5nZXRTZWFyY2hiYXJFbGVtZW50cygpO1xyXG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGVsZW1lbnRzLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0aWYgKCFzaG93KSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gd2UgdXNlIEFORCBsb2dpYyBoZXJlLiAgdGhlIGZpcnN0IHRoaW5nIHRoYXQgd291bGRcclxuXHRcdFx0XHRcdC8vIGhpZGUgb3VyIHJvdyBtZWFucyB0aGUgcm93IGlzIGhpZGRlbiBhbmQgd2UgY2FuXHJcblx0XHRcdFx0XHQvLyBza2lwIGFsbCBvdGhlciBjcml0ZXJpb24uXHJcblxyXG5cdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR2YXIgZWxlbWVudCA9IGVsZW1lbnRzW2pdO1xyXG5cdFx0XHRcdHZhciB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoZWxlbWVudCk7XHJcblx0XHRcdFx0dmFyIGF0dHIgPSB0aGlzLmdldEF0dHIoZWxlbWVudCk7XHJcblxyXG5cdFx0XHRcdC8vIGlmIHdlIGRvbid0IGhhdmUgYW4gYXR0cmlidXRlIG9yIHZhbHVlIG9yIGlmIHRoZSB2YWx1ZVxyXG5cdFx0XHRcdC8vIHdlIGRvIGhhdmUgaW5kaWNhdGVzIHRoYXQgd2Ugc2hvdWxkIGJlIHNob3dpbmcgYWxsIG9mXHJcblx0XHRcdFx0Ly8gb3VyIHJvd3MsIHdlIGNhbiBzaW1wbHkgbW92ZSBvbjsgdGhpcyBjcml0ZXJpYSBpcyxcclxuXHRcdFx0XHQvLyBlZmZlY3RpdmVseSwgYWx3YXlzIG1ldC5cclxuXHJcblx0XHRcdFx0aWYgKCFhdHRyIHx8ICF2YWx1ZSB8fCB2YWx1ZSA9PT0gXCJhbGxcIikge1xyXG5cdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR2YXIgY3JpdGVyaW9uID0gZWxlbWVudC50eXBlICE9PSBcInRleHRcIlxyXG5cdFx0XHRcdFx0PyB0aGlzLm5vblRleHRTZWFyY2gocm93LCBhdHRyLCB2YWx1ZSlcclxuXHRcdFx0XHRcdDogdGhpcy50ZXh0U2VhcmNoKHJvdywgYXR0ciwgdmFsdWUpO1xyXG5cclxuXHRcdFx0XHRzaG93ID0gc2hvdyAmJiBjcml0ZXJpb247XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICghc2hvdykge1xyXG5cclxuXHRcdFx0XHQvLyBmaW5hbGx5LCBpZiB0aGlzIHJvdyBzaG91bGQgbm90IGJlIHNob3duLCB0aGVuIHdlIGFkZFxyXG5cdFx0XHRcdC8vIHRoZSBoaWRkZW4gY2xhc3MgdG8gaXQuXHJcblxyXG5cdFx0XHRcdHJvdy5jbGFzc0xpc3QuYWRkKHRoaXMuaGlkZGVuQ2xhc3MpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5zZWFyY2hiYXIuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoXCJzZWFyY2hiYXI6YWZ0ZXJTZWFyY2hcIikpO1xyXG5cdH0sXHJcblxyXG5cdGdldFZhbHVlOiBmdW5jdGlvbihlbGVtZW50KSB7XHJcblxyXG5cdFx0Ly8gdGV4dCwgc2VsZWN0cywgYW5kIGNoZWNrYm94ZXMgYWxsIHdvcmsgZGlmZmVyZW50bHkgd2l0aFxyXG5cdFx0Ly8gcmVzcGVjdCB0byB3aGF0IHdlIGNvbnNpZGVyIG91ciBcInZhbHVlXCIgZm9yIHNlYXJjaGluZ1xyXG5cdFx0Ly8gcHVycG9zZXMuICB0aGlzIHN3aXRjaCBzdGF0ZW1lbnQgbWl4ZXMgdGhpbmdzIHVwIGFuZFxyXG5cdFx0Ly8gZ3JhYnMgb25seSB3aGF0IHdlIG5lZWQgZHVyaW5nIG91ciBzZWFyY2ggYWJvdmUgdG8gbWFrZVxyXG5cdFx0Ly8gdGhpbmdzIGhhcHBlbi5cclxuXHJcblx0XHRzd2l0Y2ggKGVsZW1lbnQudHlwZSkge1xyXG5cdFx0XHRjYXNlIFwidGV4dFwiOlxyXG5cdFx0XHRcdHJldHVybiBlbGVtZW50LnZhbHVlO1xyXG5cclxuXHRcdFx0Y2FzZSBcInNlbGVjdC1vbmVcIjpcclxuXHRcdFx0XHRyZXR1cm4gZWxlbWVudC5vcHRpb25zW2VsZW1lbnQuc2VsZWN0ZWRJbmRleF0udmFsdWU7XHJcblxyXG5cdFx0XHRjYXNlIFwiY2hlY2tib3hcIjpcclxuXHJcblx0XHRcdFx0Ly8gdGhpcyBvbmUgaXMgYSBsaXR0bGUgaGFyZGVyIHRvIGdyYXNwLiAgd2UgbmVlZCB0b1xyXG5cdFx0XHRcdC8vIHJldHVybiB0aGUgc3RyaW5nIFwiMVwiIHdoZW4gY2hlY2tlZCBiZWNhdXNlIGl0J3MgYWdhaW5zdFxyXG5cdFx0XHRcdC8vIHN1Y2ggYSBzdHJpbmcgdGhhdCB3ZSdsbCBiZSB0ZXN0aW5nIG91ciByb3dzLiAgaWYgd2VcclxuXHRcdFx0XHQvLyByZXR1cm5lZCBhIG51bWVyaWMgMSwgdGhlID09PSB0ZXN0IHdvdWxkIGZhaWwuXHJcblxyXG5cdFx0XHRcdHJldHVybiBlbGVtZW50LmNoZWNrZWQgPyBcIjFcIiA6IG51bGw7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIFwiXCI7XHJcblx0fSxcclxuXHJcblx0Z2V0QXR0cjogZnVuY3Rpb24oZWxlbWVudCkge1xyXG5cclxuXHRcdC8vIHRoZSBIVE1MNSBkYXRhIGVsZW1lbnRzIHRoYXQgcGFyc2VTZWFyY2hhYmxlKCkgY3JlYXRlc1xyXG5cdFx0Ly8gYXJlIGRhdGEtW2lkXSB3aGVyZSB0aGUgaWQgaXMgdGhlIHZhbHVlIG9mIG91ciBlbGVtZW50J3NcclxuXHRcdC8vIElEIGF0dHJpYnV0ZS5cclxuXHJcblx0XHR2YXIgaWQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImlkXCIpO1xyXG5cclxuXHRcdGlmIChpZCkge1xyXG5cclxuXHRcdFx0Ly8gaWYgd2UgaGF2ZSBhbiBJRCwgdGhlbiB3ZSBuZWVkIHRvIHJlbW92ZSBldmVyeXRoaW5nXHJcblx0XHRcdC8vIGFmdGVyIHRoZSB1bmRlcnNjb3JlLCBpbmNsdWRpbmcgdGhlIHVuZGVyc2NvcmUuICB3ZVxyXG5cdFx0XHQvLyBleHBlY3Qgb3VyIElEcyBmb3Igc2VhcmNoaW5nIGVsZW1lbnRzIHRvIGJlIGluIHRoZVxyXG5cdFx0XHQvLyBmb3JtIG9mIFtpZF1fW3R5cGVdLCBzbyB0aGlzIHNpbXBseSBsZWF2ZXMgdXMgd2l0aFxyXG5cdFx0XHQvLyB0aGUgaWQuXHJcblxyXG5cdFx0XHRpZCA9IGlkLnJlcGxhY2UoL18uKi8sIFwiXCIpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIFwiXCI7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gc3RpbGwgaGVyZT8gIHRoZW4gd2UgY2FuIGNvbnN0cnVjdCB0aGUgb3VyIGRhdGFcclxuXHRcdC8vIGF0dHJpYnV0ZSB1c2luZyB0aGUgSUQgd2UncmUgbGVmdCB3aXRoLlxyXG5cclxuXHRcdHJldHVybiBcImRhdGEtXCIgKyBpZDtcclxuXHR9LFxyXG5cclxuXHRub25UZXh0U2VhcmNoOiBmdW5jdGlvbihyb3csIGF0dHIsIHZhbHVlKSB7XHJcblxyXG5cdFx0Ly8gaWYgb3VyIHJvdyBoYXMgYSBsaXN0IGZsYWcgZm9yIHRoaXMgYXR0cmlidXRlLCB0aGVuIHdlXHJcblx0XHQvLyB3YW50IHRvIHNlZSBpZiBvdXIgYXR0cmlidXRlIGNvbnRhaW5zIHRoZSB2YWx1ZS4gIG90aGVyd2lzZSxcclxuXHRcdC8vIHdlIGNoZWNrIHRvIHNlZSB0aGUgYXR0cmlidXRlIG1hdGNoZXMgaXQuICB3aXRoIHJlc3BlY3QgdG9cclxuXHRcdC8vIHRoZSBtYXRjaGVzKCkgY2FsbCBoZXJlLCBpZiB3ZSBhc3N1bWUgb3VyIHZhbHVlIGlzIDEsIHRoZW5cclxuXHRcdC8vIHdlIHNlYXJjaCBmb3IgXzFfLiAgdGhpcyBpcyB0byBhdm9pZCBpbnZhbGlkIHNlbGVjdG9yIGVycm9yc1xyXG5cdFx0Ly8gd2l0aGluIHRoZSBqYXZhc2NyaXB0LiAgZnVydGhlciwgaXQgaGVscHMgZGlzdGluZ3Vpc2ggYmV0d2VlblxyXG5cdFx0Ly8gXzFfIGFuZCBfMTFfIG9yIF93b25fIGFuZCBfd29uZGVyXywgZm9yIGV4YW1wbGUuXHJcblxyXG5cdFx0cmV0dXJuIHJvdy5oYXNBdHRyaWJ1dGUoYXR0ciArIFwiLWxpc3RcIilcclxuXHRcdFx0PyByb3cubWF0Y2hlcyhcIltcIiArIGF0dHIgKyBcIio9X1wiICsgdmFsdWUgKyBcIl9dXCIpXHJcblx0XHRcdDogcm93LmdldEF0dHJpYnV0ZShhdHRyKSA9PT0gdmFsdWU7XHJcblx0fSxcclxuXHJcblx0dGV4dFNlYXJjaDogZnVuY3Rpb24ocm93LCBhdHRyLCB2YWx1ZSkge1xyXG5cclxuXHRcdC8vIGZvciB0ZXh0IHNlYXJjaGVzLCB3ZSBjb25zdHJ1Y3QgYSByZWdleCBmcm9tIHRoZSB2YWx1ZSBvZlxyXG5cdFx0Ly8gb3VyIHNlYXJjaCBmaWVsZCBhbmQgc2VlIGlmIHRoaXMgcm93IG1hdGNoZXMgaXQuICB3ZSBwdXRcclxuXHRcdC8vIHRoaXMgYWxsIGluc2lkZSBhIHRyeS9jYXRjaCBibG9jayBiZWNhdXNlIGl0J3MgcG9zc2libGUgdG9cclxuXHRcdC8vIGNyZWF0ZSBhIHZhbHVlIHRoYXQgY2FuJ3QgYmUgYSByZWdleCwgYW5kIHRoZW4gYW4gZXhjZXB0aW9uXHJcblx0XHQvLyBpcyB0aHJvd24uXHJcblxyXG5cdFx0dHJ5IHtcclxuXHRcdFx0dmFyIHBhdHRlcm4gPSBuZXcgUmVnRXhwKHZhbHVlLCBcImlcIik7XHJcblx0XHRcdHJldHVybiByb3cuZ2V0QXR0cmlidXRlKGF0dHIpLm1hdGNoKHBhdHRlcm4pO1xyXG5cdFx0fSBjYXRjaCAoZSkge1xyXG5cclxuXHRcdFx0Ly8gaWYgd2UgY291bGRuJ3QgZXZlbiBtYWtlIG91ciBwYXR0ZXJuLCB0aGVuIHdlJ2xsIGFzc3VtZVxyXG5cdFx0XHQvLyB0aGF0IHdoYXRldmVyIHdlIGhhdmUgY291bGQgbm90IGJlIG1hdGNoZWQgYW5kIHJldHVyblxyXG5cdFx0XHQvLyBmYWxzZS5cclxuXHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHR9LFxyXG5cclxuXHRyZXNldDogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgYmVmb3JlUmVzZXQgPSBuZXcgRXZlbnQoXCJzZWFyY2hiYXI6cmVzZXRcIik7XHJcblx0XHR2YXIgY2FuY2VsbGVkID0gIXRoaXMuc2VhcmNoYmFyLmRpc3BhdGNoRXZlbnQoYmVmb3JlUmVzZXQpO1xyXG5cclxuXHRcdGlmICghY2FuY2VsbGVkKSB7XHJcblxyXG5cdFx0XHQvLyBpZiBubyBvbmUgY2FuY2VsbGVkIG91ciByZXNldCwgdGhlbiB3ZSBqdXN0IHJlc2V0IHRoZVxyXG5cdFx0XHQvLyBzZWFyY2hiYXIgZm9ybSBhbmQgb3VyIHNlYXJjaGFibGUgZGF0YSBzZXQuXHJcblxyXG5cdFx0XHR0aGlzLnNlYXJjaGJhci5yZXNldCgpO1xyXG5cdFx0XHR0aGlzLnJlc2V0U2VhcmNoYWJsZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9LFxyXG5cclxuXHRyZXNldFNlYXJjaGFibGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIHJvd3MgPSB0aGlzLmdldFNlYXJjaGFibGVSb3dzKCk7XHJcblxyXG5cdFx0Ly8gcmVzZXR0aW5nIG91ciBkYXRhIHNldCBpcyBzaW1wbGU6ICB3ZSBqdXN0IHJlbW92ZSB0aGUgaGlkZGVuXHJcblx0XHQvLyBjbGFzcyBmcm9tIGFsbCByb3dzLlxyXG5cclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcm93cy5sZW5ndGg7ICsraSkge1xyXG5cdFx0XHRyb3dzW2ldLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5oaWRkZW5DbGFzcyk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0ZGVib3VuY2U6IGZ1bmN0aW9uKGZ1bmMsIHdhaXQsIGltbWVkaWF0ZSkge1xyXG5cdFx0aWYgKHdhaXQgPT09IDApIHtcclxuXHRcdFx0cmV0dXJuIGZ1bmM7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gc291cmNlOiBodHRwczovL2Rhdmlkd2Fsc2gubmFtZS9qYXZhc2NyaXB0LWRlYm91bmNlLWZ1bmN0aW9uXHJcblxyXG5cdFx0dmFyIHRpbWVvdXQ7XHJcblx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcclxuXHRcdFx0dmFyIGxhdGVyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dGltZW91dCA9IG51bGw7XHJcblx0XHRcdFx0aWYgKCFpbW1lZGlhdGUpIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcblx0XHRcdH07XHJcblx0XHRcdHZhciBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xyXG5cdFx0XHRjbGVhclRpbWVvdXQodGltZW91dCk7XHJcblx0XHRcdHRpbWVvdXQgPSBzZXRUaW1lb3V0KGxhdGVyLCB3YWl0KTtcclxuXHRcdFx0aWYgKGNhbGxOb3cpIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XHJcblx0XHR9O1xyXG5cdH1cclxufSk7XHJcbiJdfQ==
