!function(){var e=!1,t=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/;this.Class=function(){},Class.extend=function(r,a){function s(){!e&&this.init&&this.init.apply(this,arguments)}void 0==a&&(a=r,r="Class");var n=this.prototype;e=!0;var c=new this;e=!1;for(var h in a)c[h]="function"==typeof a[h]&&"function"==typeof n[h]&&t.test(a[h])?function(e,t){return function(){var r=this._super;this._super=n[e];var a=t.apply(this,arguments);return this._super=r,a}}(h,a[h]):a[h];s.prototype=c;var i=new Function("return function "+r+"(){ }")();return s.prototype.constructor=i,s.extend=arguments.callee,s},module.exports=Class}();var Searchbar=Class.extend("Searchbar",{searchbar:null,searchable:null,hiddenClass:"searchable-row-hidden",init:function(){if(this.searchbar=document.querySelector(".searchbar"),this.searchable=document.querySelector(".searchable"),this.searchbar&&this.searchable&&this.parseSearchable())for(var e=this.getSearchbarElements(),t=0;t<e.length;++t)this.processSearchbarElement(e[t])},parseSearchable:function(){var e=this.getSearchableRows();if(0===e.length)return!1;for(var t=0;t<e.length;++t)for(var r=e[t].querySelectorAll("[data-searchbar-value]"),a=0;a<r.length;++a)this.processCell(r[a],e[t]);return!0},getSearchableRows:function(){var e=this.searchable.querySelectorAll(".searchable-row");return 0===e.length&&"TABLE"===this.searchable.tagName&&(e=this.searchable.querySelectorAll("tbody tr")),e},processCell:function(e,t){var r="data-"+e.getAttribute("headers"),a=e.getAttribute("data-searchbar-value");t.setAttribute(r,a),1===e.getAttribute("data-searchbar-value-list")&&t.setAttribute(r+"-list",1)},getSearchbarElements:function(){return this.searchbar.querySelectorAll("input, select, button")},processSearchbarElement:function(e){var t="",r=0;switch(e.type){case"text":t="keyup",r=150;break;case"select-one":t="change";break;case"checkbox":case"reset":t="click"}if(t.length>0){var a="reset"!==e.type?this.debounce(this.search,r).bind(this):this.reset.bind(this);e.addEventListener(t,a)}},search:function(){var e=new Event("searchbar:beforeSearch");if(this.searchbar.dispatchEvent(e)){this.resetSearchable();for(var t=this.getSearchableRows(),r=0;r<t.length;++r){for(var a=t[r],s=!0,n=this.getSearchbarElements(),c=0;c<n.length;c++)if(s){var h=n[c],i=this.getValue(h),l=this.getAttr(h);if(l&&i&&"all"!==i){var u="text"!==h.type?this.nonTextSearch(a,l,i):this.textSearch(a,l,i);s=s&&u}}s||a.classList.add(this.hiddenClass)}this.searchbar.dispatchEvent(new Event("searchbar:afterSearch"))}},getValue:function(e){switch(e.type){case"text":return e.value;case"select-one":return e.options[e.selectedIndex].value;case"checkbox":return e.checked}return""},getAttr:function(e){var t=e.getAttribute("id");return t?"data-"+(t=t.replace(/_.*/,"")):""},nonTextSearch:function(e,t,r){return e.hasAttribute(t+"-list")?e.matches("["+t+"*=_"+r+"_]"):e.getAttribute(t)===r},textSearch:function(e,t,r){try{var a=new RegExp(r,"i");return e.getAttribute(t).match(a)}catch(e){}},reset:function(){var e=new Event("searchbar:reset");return!this.searchbar.dispatchEvent(e)||(this.searchbar.reset(),this.resetSearchable()),!1},resetSearchable:function(){for(var e=this.getSearchableRows(),t=0;t<e.length;++t)e[t].classList.remove(this.hiddenClass)},debounce:function(e,t,r){if(0===t)return e;var a;return function(){var s=this,n=arguments,c=function(){a=null,r||e.apply(s,n)},h=r&&!a;clearTimeout(a),a=setTimeout(c,t),h&&e.apply(s,n)}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
